name: CMake on a single platform

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TYPE: Debug

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        submodules: 'recursive'    
    - name: Cache vcpkg dependencies
      id: cache-vcpkg    
      uses: actions/cache@v3
      with:
        path: ${{github.workspace}}\vcpkg_installed
        key: ${{ runner.os }}-vcpkg-${{ hashFiles('**/vcpkg.json') }}
    # cmake will do this, but this allows caching if the cmake part fails.
    - if: ${{ steps.cache-vcpkg.outputs.cache-hit != 'true' }}
      name: Bootstrap vcpkg
      run: |
        cd ${{github.workspace}}\vcpkg
        .\bootstrap-vcpkg.bat
        .\vcpkg.exe integrate install
        .\vcpkg.exe install        
    - name: Prepare Vulkan SDK
      uses: humbletim/setup-vulkan-sdk@v1.2.0
      with:
        vulkan-query-version: 1.3.204.0
        vulkan-components: Vulkan-Headers, Vulkan-Loader
        vulkan-use-cache: true

    - name: Cache CMake Files
      id: cache-cmake-config    
      uses: actions/cache@v3
      with:
        path: build
        key: ${{ runner.os }}-cmake-${{ hashFiles('**/CMakeLists.txt', '**/*.cmake') }}
        restore-keys: |
          ${{ runner.os }}-cmake-
    
    - if: ${{ steps.cache-cmake-config.outputs.cache-hit != 'true' }}
      name: Configure CMake
      run: cmake -B ${{github.workspace}}\build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
      
    - name: Build
      run: cmake --build ${{github.workspace}}\build --config ${{env.BUILD_TYPE}} --target build_tests

    - name: Test
      working-directory: ${{github.workspace}}\build
      run: ctest -C ${{env.BUILD_TYPE}}
